buildscript {
    ext.kotlinVersion = '1.9.20'

    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin:$kotlinVersion-1.0.13"
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "kotlin"

    version = '1.0'
    ext {
        appName = "cotta"
        gdxVersion = '1.12.1'
        roboVMVersion = '2.3.16'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.4'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.2.1'
        shapedrawerVersion = '2.5.0'

        gsonVersion = '2.10.1'
        junitVersion = '5.9.1'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
    }

    dependencies {
        api "io.github.microutils:kotlin-logging-jvm:3.0.4"
    }
}

project(":desktop") {

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    }
}

// TODO maybe rename to "panna-client"?
project(":core") {

    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        implementation project(":panna-shared")
        implementation project(":panna-graphics")
        implementation project(":cotta-client")
        implementation project(":cotta-core")
        implementation project(":cotta-network-kryonet")
        implementation project(":cotta-network-api")
        implementation "com.google.code.gson:gson:2.8.6"
        implementation "com.github.kittinunf.fuel:fuel:2.3.1"
        implementation "space.earlygrey:shapedrawer:$shapedrawerVersion"
    }
}

project(":panna-server") {

    dependencies {
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        implementation project(":cotta-server")
        implementation project(":cotta-core")
        implementation project(":panna-shared")
        implementation project(":cotta-network-kryonet")
        implementation project(":cotta-network-api")
        implementation project(":panna-lobby")
    }
}

project(":panna-shared") {
    apply plugin: "com.google.devtools.ksp"

    dependencies {
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        implementation project(":cotta-core")
        implementation project(":cotta-annotations")
        implementation project(":cotta-client")
        implementation "org.mapeditor:libtiled:1.4.2"
        implementation "javax.xml.bind:jaxb-api:2.3.1"
        implementation "javax.activation:activation:1.1"
        implementation "org.glassfish.jaxb:jaxb-runtime:2.3.0"
        implementation "com.google.code.gson:gson:$gsonVersion"
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        ksp project(":cotta-annotations-processor")

        testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    }
}

project(":panna-graphics") {

    dependencies {
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        implementation project(":cotta-core")
        implementation project(":panna-shared")
        // TODO cleanup
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
    }
}

project(":panna-devutils") {

    dependencies {
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        implementation project(":cotta-core")
        implementation project(":panna-graphics")
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }
}

project(":cotta-server") {
    apply {
        plugin("com.google.devtools.ksp")
    }
    dependencies {
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        implementation project(":cotta-core")
        implementation project(":cotta-utils")
        implementation project(":cotta-annotations")
        implementation project(":cotta-network-api")
        implementation project(":cotta-network-kryonet") // TODO not needed directly
        testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
        implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
        ksp project(":cotta-annotations-processor")

        implementation "com.google.inject:guice:7.0.0"
    }
}

project(":cotta-annotations") {
}

project(":cotta-annotations-processor") {

    dependencies {
        implementation project(":cotta-annotations")
        implementation project(":cotta-core")
        implementation "com.google.devtools.ksp:symbol-processing-api:1.7.10-1.0.6"
        implementation "com.squareup:kotlinpoet:1.16.0"
        implementation "com.squareup:kotlinpoet-ksp:1.16.0"
    }
}

project(":cotta-core") {
    dependencies {
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        api "org.slf4j:slf4j-api:2.0.3"
        api "ch.qos.logback:logback-classic:1.4.4"
        api project(":cotta-utils")
        testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
        implementation project(":cotta-annotations")
        implementation "com.esotericsoftware:kryo:5.0.0"
        implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

        implementation "com.google.inject:guice:7.0.0" // TODO not really needed
    }
}

project(":cotta-client") {

    dependencies {
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        implementation project(":cotta-core")
        implementation project(":cotta-network-api")
        implementation project(":cotta-network-kryonet") // TODO questionnable
        implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

        implementation "com.google.inject:guice:7.0.0"
    }
}

project(":cotta-network-api") {
    dependencies {
        implementation project(":cotta-core")
        implementation project(":cotta-annotations")
        implementation "com.google.code.gson:gson:$gsonVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
        implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    }
}

project(":cotta-network-kryonet") {

    dependencies {
        implementation project(":cotta-network-api")
        implementation project(":cotta-core")
        api "com.github.crykn:kryonet:2.22.7"
        implementation project(":cotta-utils")
    }
}

project(":cotta-gdx") {
}

project(":cotta-utils") {
}

project(":panna-lobby") {

    dependencies {
        implementation "com.sparkjava:spark-kotlin:1.0.0-alpha"
        implementation "com.google.code.gson:gson:$gsonVersion"
        implementation project(":panna-shared")
        implementation project(":cotta-core")
    }
}
